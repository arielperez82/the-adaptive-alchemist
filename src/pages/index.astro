---
import { getCollection } from 'astro:content'

import FormattedDate from '@/components/FormattedDate.astro'
import NewsletterSignup from '@/components/NewsletterSignup.astro'
import OptimizedImage from '@/components/OptimizedImage.astro'
import { SITE_DESCRIPTION, SITE_TITLE } from '@/consts'
import Layout from '@/layouts/Layout.astro'

// Get all blog posts
const allPosts = await getCollection('blog')

// Get the 5 most recent posts
const recentPosts = allPosts
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime())
  .slice(0, 5)

// Get all unique tags from posts
const allTags = [
  ...new Set(allPosts.flatMap((post) => post.data.tags || []))
].slice(0, 5)

const featuredPost = recentPosts.shift()
---

<Layout
  title={SITE_TITLE}
  description="Real-world insights on adaptive leadership, fluid organizations, and technological enablement. Learn from someone who's built, scaled, and fixed things in the trenches."
>
  <section
    class="px-4 py-10 transition-all duration-300 sm:px-6 sm:py-16 md:py-20"
  >
    <div class="relative mx-auto max-w-2xl">
      <div
        class="absolute -left-10 -top-10 h-40 w-40 animate-blob rounded-full bg-zinc-100 opacity-50 blur-3xl transition-all duration-300 dark:bg-zinc-800/50 sm:-left-20 sm:-top-20 sm:h-64 sm:w-64"
      >
      </div>
      <div
        class="absolute -bottom-10 -right-10 h-40 w-40 animate-blob rounded-full bg-zinc-200 opacity-30 blur-3xl transition-all delay-2000 duration-300 dark:bg-zinc-800/30 sm:-bottom-20 sm:-right-20 sm:h-64 sm:w-64"
      >
      </div>

      <div class="relative text-center sm:text-left">
        <h1
          class="text-3xl font-bold tracking-tight text-zinc-900 transition-colors duration-300 dark:text-zinc-100 sm:text-4xl md:text-5xl lg:text-6xl"
        >
          <span class="block">Welcome to</span>
          <span class="relative mt-1 block">
            <span class="relative inline-block">
              The Adaptive Alchemist.
              <span
                class="absolute -bottom-1 left-0 h-1 w-full origin-left transform bg-zinc-800 transition-all duration-300 dark:bg-zinc-200"
              >
              </span>
            </span>
          </span>
        </h1>
        <p
          class="mx-auto mt-4 max-w-lg text-base leading-relaxed text-zinc-600 transition-colors duration-300 dark:text-zinc-400 sm:mx-0 sm:mt-6 sm:text-lg md:mt-8"
        >
          {SITE_DESCRIPTION}
        </p>
      </div>
      <div class="mt-8 flex justify-center sm:justify-start">
        <a
          href="#newsletter-signup"
          class="theme-transition-color group relative flex min-h-[44px] items-center justify-center text-sm font-medium text-zinc-900 hover:text-zinc-700 dark:text-zinc-100 dark:hover:text-zinc-300"
          onclick="document.getElementById('newsletter-signup').scrollIntoView({behavior: 'smooth'}); return false;"
        >
          <span class="flex items-center gap-1">Stay updated</span>
          <span
            class="theme-transition-bg absolute -bottom-1 left-0 h-0.5 w-0 bg-zinc-800 transition-all duration-300 group-hover:w-full dark:bg-zinc-200"
          >
          </span>
        </a>
      </div>
    </div>
  </section>

  {
    featuredPost && (
      <section class="border-t border-zinc-100 px-4 py-10 transition-all duration-300 dark:border-zinc-800 sm:px-6 sm:py-12 md:py-16">
        <div class="mx-auto max-w-6xl">
          <div class="mx-auto max-w-3xl">
            <div class="mb-6 flex flex-col justify-between gap-4 sm:mb-8 sm:flex-row sm:items-center md:mb-12">
              <h2 class="text-center text-xl font-bold tracking-tight text-zinc-900 transition-colors duration-300 dark:text-zinc-100 sm:text-left sm:text-2xl md:text-3xl">
                Featured Post
              </h2>
            </div>
          </div>
        </div>
        <div class="mx-auto max-w-3xl">
          <article class="group relative overflow-hidden rounded-none border-b border-zinc-200 pb-6 transition-all duration-300 dark:border-zinc-800 sm:pb-8">
            <div class="flex h-full flex-col gap-6 sm:gap-8 md:flex-row">
              {featuredPost.data.heroImage && (
                <div class="mx-auto h-60 w-full max-w-full overflow-hidden sm:h-80 sm:max-w-md md:mx-0 md:h-96 md:w-1/2">
                  <OptimizedImage
                    src={featuredPost.data.heroImage}
                    alt={featuredPost.data.title}
                    class="h-full w-full object-cover transition-all duration-700 group-hover:scale-105"
                    loading="eager"
                  />
                </div>
              )}
              <div class="flex flex-1 flex-col justify-center">
                <div class="mb-3 flex items-center justify-center gap-2 text-xs text-zinc-500 transition-colors duration-300 dark:text-zinc-400 sm:text-sm md:justify-start">
                  <span class="font-medium uppercase tracking-wider">
                    Featured
                  </span>
                  <span class="h-px w-6 bg-zinc-300 transition-colors duration-300 dark:bg-zinc-700 sm:w-8" />
                  {featuredPost.data.pubDate && (
                    <time datetime={featuredPost.data.pubDate.toISOString()}>
                      {featuredPost.data.pubDate.toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                      })}
                    </time>
                  )}
                </div>

                <h2 class="mb-3 text-center text-2xl font-bold text-zinc-900 transition-colors duration-300 group-hover:text-zinc-700 dark:text-zinc-100 dark:group-hover:text-zinc-300 sm:mb-4 sm:text-3xl md:text-left">
                  <a
                    href={`/${featuredPost.slug}/`}
                    class="before:absolute before:inset-0"
                  >
                    {featuredPost.data.title}
                  </a>
                </h2>

                <p class="mb-4 line-clamp-3 text-center text-sm text-zinc-600 transition-colors duration-300 dark:text-zinc-400 sm:mb-6 sm:text-base md:text-left">
                  {featuredPost.data.description}
                </p>

                <div class="flex flex-wrap items-center justify-center gap-3 sm:gap-4 md:justify-start">
                  <div class="flex items-center text-xs text-zinc-500 transition-colors duration-300 dark:text-zinc-400 sm:text-sm">
                    <span class="inline-flex items-center">
                      {featuredPost.data.readingTime || '5 min read'}
                    </span>
                  </div>

                  {featuredPost.data.tags && (
                    <div class="flex flex-wrap justify-center gap-2 md:justify-start">
                      {featuredPost.data.tags.slice(0, 2).map((tag) => (
                        <span class="border border-zinc-200 px-2 py-1 text-xs uppercase tracking-wider text-zinc-600 transition-all duration-300 dark:border-zinc-800 dark:text-zinc-400 sm:px-3">
                          {tag}
                        </span>
                      ))}
                    </div>
                  )}
                </div>
              </div>
            </div>
          </article>
        </div>
      </section>
    )
  }

  <section
    class="border-t border-zinc-100 px-4 py-10 transition-all duration-300 dark:border-zinc-800 sm:px-6 sm:py-12 md:py-16"
  >
    <div class="mx-auto max-w-3xl">
      <div
        class="mb-6 flex flex-col justify-between gap-4 sm:mb-8 sm:flex-row sm:items-center md:mb-12"
      >
        <h2
          class="text-center text-xl font-bold tracking-tight text-zinc-900 transition-colors duration-300 dark:text-zinc-100 sm:text-left sm:text-2xl md:text-3xl"
        >
          Recent Posts
        </h2>
        <a
          href="/posts"
          class="group relative flex min-h-[44px] items-center justify-center self-center text-sm font-medium text-zinc-900 transition-colors duration-300 hover:text-zinc-700 dark:text-zinc-100 dark:hover:text-zinc-300 sm:self-auto"
        >
          <span class="flex items-center gap-1">
            View all posts
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="h-4 w-4 transition-transform duration-300 group-hover:translate-x-1"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3"
              >
              </path>
            </svg>
          </span>
          <span
            class="absolute -bottom-1 left-0 h-0.5 w-0 bg-zinc-800 transition-all duration-300 group-hover:w-full dark:bg-zinc-200"
          >
          </span>
        </a>
      </div>

      <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 sm:gap-8 md:gap-12">
        {
          recentPosts.map((post, index) => (
            <article class="group relative mx-auto flex w-full max-w-sm flex-col items-start transition-transform duration-300 hover:-translate-y-1 sm:mx-0">
              <div class="absolute -inset-x-4 -inset-y-6 z-0 scale-95 rounded-2xl bg-zinc-50 opacity-0 transition-all duration-300 group-hover:scale-100 group-hover:opacity-100 dark:bg-zinc-800/50 sm:-inset-x-6" />

              {post.data.heroImage && (
                <div class="relative z-10 mb-4 aspect-video w-full overflow-hidden rounded-lg">
                  <OptimizedImage
                    src={post.data.heroImage}
                    alt={post.data.title}
                    class="h-full w-full object-cover transition-transform duration-500 group-hover:scale-105"
                    loading={index === 0 ? 'eager' : 'lazy'}
                    width={400}
                    height={225}
                  />
                </div>
              )}

              <div class="relative z-10 flex w-full flex-wrap items-center justify-center gap-x-3 gap-y-2 text-xs text-zinc-500 transition-colors duration-300 dark:text-zinc-400 sm:justify-start sm:gap-x-4">
                <time
                  datetime={post.data.pubDate.toISOString()}
                  class="font-medium"
                >
                  <FormattedDate date={post.data.pubDate} />
                </time>
                <span class="relative z-10 rounded-full bg-zinc-100 px-2 py-1 font-medium text-zinc-600 transition-all duration-300 dark:bg-zinc-800 dark:text-zinc-300 sm:px-3 sm:py-1.5">
                  {post.data.readingTime ||
                    `${Math.ceil(post.body.length / 2000)} min read`}
                </span>
              </div>

              <h3 class="relative z-10 mt-3 w-full text-center text-lg font-semibold tracking-tight text-zinc-900 transition-colors duration-300 group-hover:text-zinc-700 dark:text-zinc-100 dark:group-hover:text-zinc-300 sm:text-left sm:text-xl">
                <a
                  href={`/${post.slug}`}
                  class="flex min-h-[44px] items-center justify-center sm:justify-start"
                >
                  <span class="absolute -inset-x-4 -inset-y-2.5 sm:-inset-x-6 sm:-inset-y-4" />
                  {post.data.title}
                </a>
              </h3>

              <p class="relative z-10 mt-2 line-clamp-3 w-full text-center text-sm text-zinc-600 transition-colors duration-300 dark:text-zinc-400 sm:mt-3 sm:text-left">
                {post.data.description}
              </p>

              {post.data.tags && post.data.tags.length > 0 && (
                <div class="relative z-10 mt-3 flex w-full flex-wrap justify-center gap-2 sm:mt-4 sm:justify-start">
                  {post.data.tags.slice(0, 3).map((tag) => (
                    <a
                      href={`/tags/${tag}`}
                      class="inline-flex min-h-[28px] items-center rounded-full bg-zinc-100 px-2 py-1 text-xs font-medium text-zinc-800 transition-colors duration-300 hover:bg-zinc-200 dark:bg-zinc-800 dark:text-zinc-100 dark:hover:bg-zinc-700 sm:px-3"
                    >
                      #{tag}
                    </a>
                  ))}
                  {post.data.tags.length > 3 && (
                    <span class="inline-flex min-h-[28px] items-center rounded-full bg-zinc-50 px-2 py-1 text-xs font-medium text-zinc-500 transition-all duration-300 dark:bg-zinc-800/50 dark:text-zinc-400">
                      +{post.data.tags.length - 3} more
                    </span>
                  )}
                </div>
              )}

              <a
                href={`/${post.slug}`}
                class="relative z-10 mx-auto mt-3 flex min-h-[44px] items-center text-sm font-medium text-zinc-700 transition-colors duration-300 group-hover:text-zinc-900 dark:text-zinc-300 dark:group-hover:text-zinc-100 sm:mx-0 sm:mt-4"
              >
                <span class="relative inline-block min-w-[85px] overflow-hidden">
                  <span class="block transition-transform duration-300 group-hover:-translate-y-full">
                    Read article
                  </span>
                  <span class="absolute left-0 top-0 translate-y-full whitespace-nowrap transition-transform duration-300 group-hover:translate-y-0">
                    Explore now
                  </span>
                </span>
                <svg
                  viewBox="0 0 16 16"
                  fill="none"
                  aria-hidden="true"
                  class="ml-1 h-4 w-4 stroke-current transition-transform duration-300 group-hover:translate-x-1"
                >
                  <path
                    d="M6.75 5.75 9.25 8l-2.5 2.25"
                    stroke-width="1.5"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  />
                </svg>
              </a>
            </article>
          ))
        }
      </div>
    </div>
  </section>

  {
    allTags.length > 0 && (
      <section class="border-t border-zinc-100 px-4 py-10 transition-all duration-300 dark:border-zinc-800 sm:px-6 sm:py-12 md:py-16">
        <div class="mx-auto max-w-3xl">
          <div class="mb-6 flex flex-col justify-between gap-4 sm:mb-8 sm:flex-row sm:items-center md:mb-12">
            <h2 class="text-center text-xl font-bold tracking-tight text-zinc-900 transition-colors duration-300 dark:text-zinc-100 sm:text-left sm:text-2xl md:text-3xl">
              Explore Topics
            </h2>
            <a
              href="/tags"
              class="group relative flex min-h-[44px] items-center justify-center self-center text-sm font-medium text-zinc-900 transition-colors duration-300 hover:text-zinc-700 dark:text-zinc-100 dark:hover:text-zinc-300 sm:self-auto"
            >
              <span class="flex items-center gap-1">
                View all topics
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="h-4 w-4 transition-transform duration-300 group-hover:translate-x-1"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3"
                  />
                </svg>
              </span>
              <span class="absolute -bottom-1 left-0 h-0.5 w-0 bg-zinc-800 transition-all duration-300 group-hover:w-full dark:bg-zinc-200" />
            </a>
          </div>

          <div class="mx-auto grid max-w-xs grid-cols-1 gap-3 sm:max-w-none sm:grid-cols-2 sm:gap-4 md:grid-cols-3">
            {allTags.map((tag) => {
              const tagCount = allPosts.filter(
                (post) => post.data.tags && post.data.tags.includes(tag)
              ).length
              return (
                <a
                  href={`/tags/${tag}`}
                  class="group flex min-h-[80px] flex-col rounded-xl border border-zinc-200 p-3 transition-all duration-300 hover:bg-zinc-50 dark:border-zinc-800 dark:hover:bg-zinc-800/70 sm:min-h-[90px] sm:p-4 md:p-6"
                >
                  <div class="mb-2 flex items-start justify-between">
                    <span class="mr-2 text-sm font-medium text-zinc-900 transition-colors duration-300 dark:text-zinc-100">
                      #{tag}
                    </span>
                    <span class="flex-shrink-0 rounded-full bg-zinc-100 px-2 py-0.5 text-xs text-zinc-500 transition-all duration-300 dark:bg-zinc-800 dark:text-zinc-400">
                      {tagCount} {tagCount === 1 ? 'post' : 'posts'}
                    </span>
                  </div>
                  <p class="mt-1 text-xs text-zinc-600 transition-colors duration-300 dark:text-zinc-400">
                    Explore articles about {tag}
                  </p>
                </a>
              )
            })}
          </div>
        </div>
      </section>
    )
  }
  <section
    class="border-t border-zinc-100 px-4 py-10 transition-all duration-300 dark:border-zinc-800 sm:px-6 sm:py-12 md:py-16"
  >
    <div class="mx-auto max-w-3xl">
      <NewsletterSignup />
    </div>
  </section>
</Layout>

<script>
  // Enhanced animations and interactions
  document.addEventListener('DOMContentLoaded', () => {
    // Handle touch devices
    const isTouchDevice =
      'ontouchstart' in window || navigator.maxTouchPoints > 0

    if (isTouchDevice) {
      const cards = document.querySelectorAll('article')

      cards.forEach((card) => {
        card.addEventListener('touchstart', () => {
          card.classList.add('touch-active')
        })

        card.addEventListener('touchend', () => {
          setTimeout(() => {
            card.classList.remove('touch-active')
          }, 300)
        })
      })
    }

    // Animate content on load
    const animateContent = () => {
      const elements = document.querySelectorAll('h1, p, article, section')
      elements.forEach((el, index) => {
        setTimeout(() => {
          el.classList.add('animate-fade-in')
        }, index * 50)
      })
    }

    animateContent()
  })
</script>
